<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Nodes</key>
	<array>
		<string>ViewController.swift:comments</string>
		<string>ViewController.swift:imports:importCocoa</string>
		<string>ViewController.swift:implementation(___FILEBASENAME___: UIViewController)</string>
		<string>ViewController.swift:implementation:methods:viewDidLoad(override func viewDidLoad(\))</string>
		<string>ViewController.swift:implementation:methods:viewDidLoad:super</string>
	</array>
	<key>Definitions</key>
	<dict>
		<key>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body</key>
		<string>	
guard let windowScene = (scene as? UIWindowScene) else { return }
let window = UIWindow(windowScene: windowScene)
window.rootViewController = ViewController()
window.makeKeyAndVisible()
self.window = window</string>
	</dict>
	<key>Kind</key>
	<string>Xcode.Xcode3.ProjectTemplateUnitKind</string>
	<key>Identifier</key>
	<string>com.swift-boilerplate.dt.unit.programmaticApp</string>
	<key>Ancestors</key>
	<array>
		<string>com.apple.dt.unit.coreDataCocoaTouchApplication</string>
		<string>com.apple.dt.unit.sceneLifecycleApplication</string>
	</array>
	<key>Concrete</key>
	<true/>
	<key>Description</key>
	<string>This template provides a starting point for an application that uses a single view. It provides a view controller to manage the view, and a storyboard or nib file that contains the view.</string>
	<key>SortOrder</key>
	<integer>1</integer>
	<key>NameOfInitialFileForEditor</key>
	<string>ViewController.swift</string>
	<key>Options</key>
	<array>
		<dict>
			<key>Values</key>
			<array>
				<string>No Storyboard</string>
			</array>
			<key>Identifier</key>
			<string>userInterface</string>
			<key>Name</key>
			<string>Interface:</string>
			<key>Description</key>
			<string>The type of user interface.</string>
			<key>Default</key>
			<string>No Storyboard</string>
			<key>Type</key>
			<string>popup</string>
		</dict>
	</array>
</dict>
</plist>
